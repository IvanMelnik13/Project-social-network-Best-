{"version":3,"file":"static/js/967.4ca1453f.chunk.js","mappings":"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","sources":["components/pages/Profile/ProfileStatus.tsx","components/pages/Profile/ProfilePhoto.tsx","components/pages/Profile/ProfileInfo.tsx","components/pages/Profile/ProfileReactHookForm.tsx","components/pages/Profile/Profile.tsx","components/pages/Profile/ProfileContainer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ntype propsType = {\r\n\tstatus: string | null\r\n\tsaveStatus: (status: string | null) => void\r\n\tisOwner: boolean\r\n}\r\n\r\nconst ProfileStatus: React.FC<propsType> = ({ status, saveStatus, isOwner }) => {\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [statusValue, setStatusValue] = useState<string>(status ?? '');\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatusValue(status ?? '');\r\n\t}, [status])\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tif (isOwner) {\r\n\t\t\tsetEditMode(true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tsaveStatus(statusValue);\r\n\t}\r\n\r\n\tconst onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatusValue(e.currentTarget.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div className='border-b min-w-[100px] text-start cursor-pointer'\r\n\t\t\t\t\tonDoubleClick={activateEditMode}>\r\n\t\t\t\t\t{status || '...'}\r\n\t\t\t\t</div>}\r\n\r\n\t\t\t{editMode &&\r\n\t\t\t\t<input className=\"border\"\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\tvalue={statusValue}\r\n\t\t\t\t\tonChange={onChange} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatus;","import avatar from '../../../assets/img/avatar.jpg'\r\nimport React, { useRef } from 'react'\r\nimport { profileType } from '../../../types/types'\r\n\r\ntype propsType = {\r\n\tprofile: profileType | null\r\n\tisOwner: boolean\r\n\tsavePhoto: (photo: any) => void\r\n}\r\n\r\nconst ProfilePhoto: React.FC<propsType> = ({ profile, isOwner, savePhoto }) => {\r\n\tconst inputRef = useRef<any>();\r\n\r\n\tconst onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst file = e.target.files![0]\r\n\t\tsavePhoto(file)\r\n\t\tinputRef.current.value = null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='max-w-[200px] mb-1 border-2 border-red-700 rounded-[50%] overflow-hidden'>\r\n\t\t\t\t<img src={profile?.photos?.large || avatar} alt=\"avatar\" />\r\n\t\t\t</div>\r\n\t\t\t{isOwner &&\r\n\t\t\t\t<input type=\"file\"\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tonChange={onChange} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfilePhoto;","import { profileType } from \"../../../types/types\"\r\n\r\ntype propsType = {\r\n\tprofile: profileType | null\r\n}\r\n\r\nconst ProfileInfo: React.FC<propsType> = ({ profile }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>{profile?.fullName}</div>\r\n\t\t\t<div>About me: {profile?.aboutMe}</div>\r\n\t\t\t{profile?.lookingForAJob && <div>lookingForAJob: {profile?.lookingForAJob ? 'yes' : 'no'}</div>}\r\n\t\t\t{profile?.lookingForAJobDescription &&\r\n\t\t\t\t<div>lookingForAJobDescription: {profile?.lookingForAJobDescription}</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<div className='mb-1 text-start'>Contacts:</div>\r\n\t\t\t\t<ul className='flex flex-col gap-1 items-start'>\r\n\t\t\t\t\t{profile &&\r\n\t\t\t\t\t\tObject.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={key} className='pl-3'>\r\n\t\t\t\t\t\t\t\t\t{key}: {profile.contacts[key as keyof typeof profile.contacts]}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import { useForm } from 'react-hook-form'\r\nimport React, { useEffect } from 'react'\r\nimport { profileFormEditDataType, profileType } from '../../../types/types'\r\n\r\ntype propsType = {\r\n\tprofile: profileType\r\n\tsaveProfile: (profileData: profileFormEditDataType, id: number) => void\r\n\tserverErrors: string[] | null\r\n}\r\n\r\ntype FormInputs = {\r\n\tfullName: string | null\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tcontacts: {\r\n\t\tfacebook: string | null\r\n\t\twebsite: string | null\r\n\t\tvk: string | null\r\n\t\ttwitter: string | null\r\n\t\tinstagram: string | null\r\n\t\tyoutube: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t}\r\n\t_form: string\r\n}\r\n\r\nconst ProfileReactHookForm: React.FC<propsType> = ({ profile, saveProfile, serverErrors }) => {\r\n\tconst { register, handleSubmit, setError, formState: { errors }, clearErrors } = useForm<FormInputs>({\r\n\t\tdefaultValues: {\r\n\t\t\tfullName: profile.fullName,\r\n\t\t\taboutMe: profile.aboutMe,\r\n\t\t\tlookingForAJob: profile.lookingForAJob,\r\n\t\t\tlookingForAJobDescription: profile.lookingForAJobDescription,\r\n\t\t\tcontacts: profile.contacts,\r\n\t\t},\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (serverErrors) {\r\n\t\t\tsetError('_form', { type: 'server side', message: serverErrors[0] })\r\n\t\t}\r\n\t}, [serverErrors])\r\n\r\n\tconst onSubmit = (formData: profileFormEditDataType) => {\r\n\t\tsaveProfile(formData, profile.userId);\r\n\t\t// if (data.resultCode == 0) {\r\n\t\t// \tsetEditMode(false);\r\n\t\t// } else {\r\n\t\t// \tsetError('_form', { type: 'server side', message: data.messages[0] })\r\n\t\t// }\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className='flex flex-col items-start gap-2 w-full' onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t{errors._form && <div className='text-red-700'>Error: {errors._form.message}</div>}\r\n\t\t\t<div className='flex gap-3 w-full'>\r\n\t\t\t\t<label>Full name:</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='border-b-2 flex-auto'\r\n\t\t\t\t\tplaceholder='full name'\r\n\t\t\t\t\t{...register('fullName')} />\r\n\t\t\t</div>\r\n\t\t\t<div className='flex gap-3 w-full'>\r\n\t\t\t\t<label>About me:</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='border-b-2 flex-auto'\r\n\t\t\t\t\tplaceholder='about me'\r\n\t\t\t\t\t{...register('aboutMe')} />\r\n\t\t\t</div>\r\n\t\t\t<div className='flex gap-3 w-full'>\r\n\t\t\t\t<label>Looking for a job:</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t{...register('lookingForAJob')} />\r\n\t\t\t</div>\r\n\t\t\t<div className='flex gap-3 w-full'>\r\n\t\t\t\t<label>Looking for a job description:</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='border-b-2 flex-auto'\r\n\t\t\t\t\tplaceholder='looking for a job description'\r\n\t\t\t\t\t{...register('lookingForAJobDescription')} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{profile &&\r\n\t\t\t\tObject.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={key} className='flex gap-3 w-full pl-3'>\r\n\t\t\t\t\t\t\t<label>{key}:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName='border-b-2 flex-auto'\r\n\t\t\t\t\t\t\t\tplaceholder={key}\r\n\t\t\t\t\t\t\t\t{...register(`contacts.${key as keyof typeof profile.contacts}`)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t<button onClick={() => clearErrors('_form')}\r\n\t\t\t\tclassName='border-2 py-1 px-5 rounded-[10px]'\r\n\t\t\t\ttype='submit'>Submit</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default ProfileReactHookForm","import { useState } from 'react'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport React from 'react'\r\nimport { profileFormEditDataType, profileType } from '../../../types/types'\r\nimport ProfilePhoto from './ProfilePhoto'\r\nimport ProfileInfo from './ProfileInfo'\r\nimport ProfileReactHookForm from './ProfileReactHookForm'\r\n\r\ntype profilePropsType = {\r\n\tprofile: profileType | null\r\n\tisOwner: boolean\r\n\tsaveProfile: (profileData: profileFormEditDataType, id: number) => void\r\n\tstatus: string | null\r\n\tsaveStatus: (status: string | null) => void\r\n\tsavePhoto: (photo: any) => void\r\n\tisFetching: boolean\r\n\tsetEditMode: (editMode: boolean) => void\r\n\teditMode: boolean\r\n\terrors: Array<string> | null\r\n\tsetFormError: (errors: Array<string> | null) => void\r\n}\r\nconst Profile: React.FC<profilePropsType> = ({ profile, isOwner, saveProfile,\r\n\tstatus, saveStatus, savePhoto, isFetching, setEditMode, editMode, errors, setFormError }) => {\r\n\r\n\r\n\tif (profile) {\r\n\t\treturn (\r\n\t\t\t<div className='items-start text-start flex flex-col p-4 gap-3'>\r\n\r\n\t\t\t\t<ProfilePhoto profile={profile} isOwner={isOwner} savePhoto={savePhoto} />\r\n\r\n\t\t\t\t<ProfileStatus status={status} saveStatus={saveStatus} isOwner={isOwner} />\r\n\r\n\t\t\t\t{!editMode && <ProfileInfo profile={profile} />}\r\n\t\t\t\t{editMode && <ProfileReactHookForm serverErrors={errors} saveProfile={saveProfile}\r\n\t\t\t\t\tprofile={profile} />}\r\n\r\n\t\t\t\t{isOwner &&\r\n\t\t\t\t\t<button className='underline' onClick={() => { setEditMode(!editMode); setFormError(null) }}>\r\n\t\t\t\t\t\t{editMode ? \"Cansel edit\" : \"Edit\"}\r\n\t\t\t\t\t</button>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='p-4 text-start'>Profile not found...</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { setProfile, saveProfile, setStatus, saveStatus, savePhoto, actions } from \"../../../redux/profileReducer\";\r\nimport { appStateType } from \"../../../redux/store\";\r\nimport { profileFormEditDataType, profileType } from \"../../../types/types\";\r\n\r\ntype mapStatePropsType = {\r\n\tprofile: profileType | null\r\n\tstatus: string | null\r\n\tmyID: number | null\r\n\tisFetching: boolean\r\n\teditMode: boolean\r\n\terrors: Array<string> | null\r\n}\r\ntype mapDispatchPropsType = {\r\n\tsetProfile: (id: number) => void\r\n\tsaveProfile: (profileData: profileFormEditDataType, id: number) => void\r\n\tsetStatus: (id: number) => void\r\n\tsaveStatus: (status: string | null) => void\r\n\tsavePhoto: (photo: any) => void\r\n\tsetEditMode: (editMode: boolean) => void\r\n\tsetFormError: (errors: Array<string> | null) => void\r\n}\r\n\r\ntype ownPropsType = {}\r\n\r\ntype propsType = mapStatePropsType & mapDispatchPropsType & ownPropsType\r\n\r\nconst ProfileContainer: React.FC<propsType> = ({ profile, myID, setProfile, saveProfile, status, setStatus,\r\n\tsaveStatus, savePhoto, isFetching, setEditMode, editMode, errors, setFormError }) => {\r\n\tlet { userID } = useParams<{ userID: string | undefined }>();\r\n\tlet ID: number | null = Number(userID);\r\n\r\n\tif (!ID) {\r\n\t\tID = myID;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ID) {\r\n\t\t\tsetProfile(ID);\r\n\t\t\tsetStatus(ID);\r\n\t\t}\r\n\t}, [ID])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEditMode(false)\r\n\t\tsetFormError(null)\r\n\t}, [])\r\n\r\n\tif (!ID) {\r\n\t\treturn <Navigate to=\"/login\" />\r\n\t}\r\n\r\n\tif (isFetching) {\r\n\t\treturn <div className='text-start p-4'>Loading...</div>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Profile profile={profile} status={status} savePhoto={savePhoto} saveStatus={saveStatus}\r\n\t\t\tsaveProfile={saveProfile} editMode={editMode} setEditMode={setEditMode} isOwner={myID == ID} isFetching={isFetching} setFormError={setFormError} errors={errors} />\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state: appStateType): mapStatePropsType => {\r\n\treturn {\r\n\t\tprofile: state.profile.profile,\r\n\t\tstatus: state.profile.status,\r\n\t\tmyID: state.authMe.id,\r\n\t\tisFetching: state.profile.isFetching,\r\n\t\teditMode: state.profile.form.editMode,\r\n\t\terrors: state.profile.form.errors\r\n\t}\r\n}\r\n\r\nexport default connect<mapStatePropsType, mapDispatchPropsType, ownPropsType, appStateType>(mapStateToProps, {\r\n\tsetProfile, saveProfile,\r\n\tsetStatus, saveStatus, savePhoto, setEditMode: actions.setEditMode, setFormError: actions.setFormError\r\n})(ProfileContainer);"],"names":["status","saveStatus","isOwner","useState","editMode","setEditMode","statusValue","setStatusValue","useEffect","className","onDoubleClick","autoFocus","onBlur","value","onChange","e","currentTarget","profile","savePhoto","inputRef","useRef","src","photos","large","avatar","alt","type","ref","file","target","files","current","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","saveProfile","serverErrors","useForm","defaultValues","register","handleSubmit","setError","errors","formState","clearErrors","message","onSubmit","formData","userId","_form","placeholder","onClick","isFetching","setFormError","connect","state","myID","authMe","id","form","setProfile","setStatus","actions","userID","useParams","ID","Number","to"],"sourceRoot":""}